name: "CodeQL Security Analysis"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '30 5 * * 1'  # 每周一早上5:30运行

jobs:
  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        # 支持的语言: 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # 如果你想控制查询哪些文件，可以取消下面的注释并根据需要修改路径
        # queries: security-extended,security-and-quality

    # 自动构建尝试使用默认构建方法来构建编译语言(C/C++, C#, Go, 或 Java)
    # 如果这个步骤失败，则应删除它并运行构建步骤（如下所示）
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # ℹ️ 使用以下三个步骤中的任意一个来替换上面的自动构建步骤
    # 如果您的项目使用了其他依赖管理工具，例如apt-get, yum, npm/yarn等
    
    # - name: Install dependencies
    #   run: |
    #     npm ci
    #     npm run build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"