name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
        - prerelease

jobs:
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: npm run build
      
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: npm run build
      
    - name: Bump version
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        
    - name: Create Release Notes
      run: |
        cat > RELEASE_NOTES.md << 'EOF'
        ## 🚀 Claude TDD CLI v${{ env.NEW_VERSION }}
        
        ### ✨ 新功能
        - 改进的项目检测功能
        - 优化的用户体验
        - 更好的错误处理
        
        ### 🐛 问题修复
        - 修复了配置文件处理问题
        - 改进了模板生成逻辑
        
        ### 📈 性能优化
        - 减少了启动时间
        - 优化了内存使用
        
        ### 📦 安装方式
        
        ```bash
        # 全局安装
        npm install -g claude-tdd-cli@${{ env.NEW_VERSION }}
        
        # 或者使用最新版本
        npm install -g claude-tdd-cli@latest
        ```
        
        ### 🔧 使用方法
        
        ```bash
        # 查看版本
        claude-tdd --version
        
        # 初始化TDD工作流
        claude-tdd init
        
        # 诊断环境
        claude-tdd doctor
        ```
        
        ---
        
        **完整更新日志**: https://github.com/claude-tdd/claude-tdd-cli/compare/v${{ env.OLD_VERSION }}...v${{ env.NEW_VERSION }}
        EOF
        
    - name: Create Tag and Push
      run: |
        git add package.json
        git commit -m "chore: bump version to ${{ env.NEW_VERSION }}"
        git tag -a "v${{ env.NEW_VERSION }}" -m "Release v${{ env.NEW_VERSION }}"
        git push origin main
        git push origin "v${{ env.NEW_VERSION }}"
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.NEW_VERSION }}
        release_name: Claude TDD CLI v${{ env.NEW_VERSION }}
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: ${{ contains(env.NEW_VERSION, 'beta') || contains(env.NEW_VERSION, 'alpha') || contains(env.NEW_VERSION, 'rc') }}

  publish-after-release:
    name: Publish after GitHub Release
    runs-on: ubuntu-latest
    needs: create-github-release
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: main
        
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create Success Summary
      run: |
        echo "🎉 Successfully released Claude TDD CLI!" >> $GITHUB_STEP_SUMMARY
        echo "📦 Package published to NPM" >> $GITHUB_STEP_SUMMARY
        echo "🏷️ GitHub release created" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version**: $(node -p 'require(\"./package.json\").version')" >> $GITHUB_STEP_SUMMARY
        echo "**Install**: \`npm install -g claude-tdd-cli@latest\`" >> $GITHUB_STEP_SUMMARY