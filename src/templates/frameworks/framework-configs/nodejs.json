{
  "name": "Node.js/JavaScript/TypeScript",
  "framework": "nodejs",
  "version": "1.0.0",
  "description": "Node.js项目配置模板，支持JavaScript和TypeScript",
  
  "detection": {
    "files": ["package.json", "yarn.lock", "pnpm-lock.yaml", "bun.lockb"],
    "directories": ["node_modules"],
    "package_managers": ["npm", "yarn", "pnpm", "bun"]
  },
  
  "test": {
    "directories": ["tests", "test", "__tests__", "spec", "specs", "src/__tests__"],
    "patterns": {
      "unit": ["**/*.test.js", "**/*.spec.js", "**/*.test.ts", "**/*.spec.ts"],
      "integration": ["**/*.integration.test.js", "**/*.integration.spec.js", "**/*.integration.test.ts", "**/*.integration.spec.ts"],
      "e2e": ["**/*.e2e.test.js", "**/*.e2e.spec.js", "**/*.e2e.test.ts", "**/*.e2e.spec.ts"]
    },
    "frameworks": {
      "unit": ["jest", "vitest", "mocha", "ava", "tape"],
      "integration": ["supertest", "nock", "msw"],
      "e2e": ["cypress", "playwright", "webdriver", "puppeteer"]
    }
  },
  
  "commands": {
    "install": {
      "npm": "npm install",
      "yarn": "yarn install",
      "pnpm": "pnpm install",
      "bun": "bun install"
    },
    "test": {
      "unit": "npm test",
      "watch": "npm run test:watch",
      "coverage": "npm run test:coverage",
      "integration": "npm run test:integration",
      "e2e": "npm run test:e2e"
    },
    "build": {
      "javascript": "npm run build",
      "typescript": "npm run build && npx tsc"
    },
    "lint": {
      "eslint": "npx eslint . --ext .js,.jsx,.ts,.tsx",
      "prettier": "npx prettier --check .",
      "fix": "npx eslint . --ext .js,.jsx,.ts,.tsx --fix && npx prettier --write ."
    },
    "typecheck": "npx tsc --noEmit"
  },
  
  "tools": {
    "testing": {
      "jest": {
        "config_file": "jest.config.js",
        "commands": {
          "test": "npx jest",
          "watch": "npx jest --watch",
          "coverage": "npx jest --coverage"
        }
      },
      "vitest": {
        "config_file": "vitest.config.ts",
        "commands": {
          "test": "npx vitest run",
          "watch": "npx vitest",
          "coverage": "npx vitest run --coverage"
        }
      }
    },
    "coverage": {
      "jest": "jest --coverage",
      "vitest": "vitest run --coverage",
      "c8": "c8 npm test",
      "nyc": "nyc npm test"
    },
    "quality": {
      "eslint": "@eslint/js",
      "prettier": "prettier",
      "husky": "husky",
      "lint-staged": "lint-staged"
    }
  },
  
  "structure": {
    "src": "src/",
    "tests": "tests/",
    "docs": "docs/",
    "config": {
      "package.json": "项目依赖和脚本配置",
      "tsconfig.json": "TypeScript编译配置",
      "jest.config.js": "Jest测试配置",
      "vitest.config.ts": "Vitest测试配置",
      ".eslintrc.js": "ESLint代码规范配置",
      ".prettierrc": "Prettier代码格式化配置"
    }
  },
  
  "tdd": {
    "red_phase": {
      "commands": ["npm test -- --watchAll=false", "npm run test:unit"],
      "expectations": "测试失败，明确错误信息"
    },
    "green_phase": {
      "commands": ["npm test -- --watchAll=false", "npm run test:unit"],
      "expectations": "最小实现让测试通过"
    },
    "refactor_phase": {
      "commands": [
        "npm run lint",
        "npm run typecheck",
        "npm test -- --coverage",
        "npm run test:integration"
      ],
      "expectations": "代码重构，保持测试通过，提高代码质量"
    }
  },
  
  "quality_gates": {
    "coverage": {
      "line": 80,
      "branch": 75,
      "function": 80,
      "statement": 80
    },
    "complexity": {
      "max_cyclomatic": 10,
      "max_cognitive": 15
    },
    "performance": {
      "test_timeout": 30000,
      "max_test_duration": "2s"
    }
  },
  
  "best_practices": {
    "naming": {
      "test_files": "使用 .test.js/.spec.js 后缀",
      "test_suites": "describe() 描述测试组",
      "test_cases": "it() 或 test() 描述具体测试"
    },
    "structure": {
      "aaa_pattern": "Arrange-Act-Assert 模式",
      "isolation": "每个测试独立，无副作用",
      "mocking": "合理使用 Mock 隔离外部依赖"
    },
    "coverage": {
      "unit_tests": "覆盖核心业务逻辑",
      "integration_tests": "验证组件交互",
      "e2e_tests": "关键用户路径"
    }
  },
  
  "common_packages": {
    "testing": {
      "jest": "^29.0.0",
      "vitest": "^1.0.0",
      "@testing-library/jest-dom": "^6.0.0",
      "@testing-library/react": "^14.0.0",
      "supertest": "^6.3.0"
    },
    "mocking": {
      "msw": "^2.0.0",
      "nock": "^13.0.0",
      "jest-mock": "^29.0.0"
    },
    "e2e": {
      "cypress": "^13.0.0",
      "playwright": "^1.40.0",
      "@playwright/test": "^1.40.0"
    },
    "quality": {
      "eslint": "^8.0.0",
      "prettier": "^3.0.0",
      "@typescript-eslint/parser": "^6.0.0",
      "@typescript-eslint/eslint-plugin": "^6.0.0"
    }
  },
  
  "templates": {
    "unit_test": {
      "javascript": "// tests/example.test.js\nimport { example } from '../src/example';\n\ndescribe('Example Function', () => {\n  it('should return expected result', () => {\n    // Arrange\n    const input = 'test';\n    const expected = 'expected';\n    \n    // Act\n    const result = example(input);\n    \n    // Assert\n    expect(result).toBe(expected);\n  });\n});",
      "typescript": "// tests/example.test.ts\nimport { example } from '../src/example';\n\ndescribe('Example Function', () => {\n  it('should return expected result', () => {\n    // Arrange\n    const input: string = 'test';\n    const expected: string = 'expected';\n    \n    // Act\n    const result = example(input);\n    \n    // Assert\n    expect(result).toBe(expected);\n  });\n});"
    },
    "integration_test": {
      "api": "// tests/api.integration.test.js\nimport request from 'supertest';\nimport app from '../src/app';\n\ndescribe('API Integration Tests', () => {\n  it('should handle user registration', async () => {\n    const response = await request(app)\n      .post('/api/users')\n      .send({ name: 'Test User', email: 'test@example.com' })\n      .expect(201);\n    \n    expect(response.body.user.name).toBe('Test User');\n  });\n});"
    }
  }
}